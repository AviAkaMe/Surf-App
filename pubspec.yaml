name: b_surf
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.19.6 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.

# firebase_core: ^2.15.0
# This package is part of the Firebase SDK and provides the necessary core functionality for Firebase services in Flutter applications. It needs to be initialized before using any other Firebase services.
#
# firebase_auth: ^4.6.1
# This package is part of the Firebase SDK and provides authentication services for Firebase, allowing you to integrate user authentication features in your Flutter app.
#
# curved_navigation_bar: ^1.0.3
# This is a custom navigation bar widget with a curved design. It's often used to create visually appealing bottom navigation bars in Flutter applications.
#
# youtube_player_flutter: ^8.1.2
# This package allows you to embed YouTube videos in your Flutter app using a YouTube player. It provides a Flutter widget for playing YouTube videos.
#
# url_launcher: ^6.1.12
# The url_launcher package allows you to open URLs in the default web browser on the device. It's useful for launching external links from your Flutter app.
#
# cloud_firestore: ^4.8.4
# This package is part of the Firebase SDK and provides Firestore, a NoSQL cloud database. It allows you to store and sync data in real-time between multiple clients.
#
# firebase_messaging: ^14.6.6
# Another part of the Firebase SDK, this package enables you to receive and handle push notifications in your Flutter app using Firebase Cloud Messaging (FCM).
#
# geolocator: ^10.0.0
# The geolocator package provides geolocation services, allowing you to retrieve the current location of the device. It's useful for applications that require location-based features.
#
# http: ^1.1.0
# The http package allows you to make HTTP requests in your Flutter app. It's essential for interacting with APIs and fetching data from web services.
#
# shared_preferences: ^2.2.2
# This package provides a simple way to store and retrieve key-value pairs persistently. It's often used for storing small amounts of data locally, such as user preferences.

dependencies:
  flutter:
    sdk: flutter
  firebase_core: ^2.15.0
  firebase_auth: ^4.6.1
  curved_navigation_bar: ^1.0.3
  youtube_player_flutter: ^8.1.2
  url_launcher: ^6.1.12
  cloud_firestore: ^4.8.4
  firebase_messaging: ^14.6.6
  geolocator: ^10.0.0
  http: ^1.1.0
  shared_preferences: ^2.2.2

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - lib/images/
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
